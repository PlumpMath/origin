<view:DocumentViewBase x:Class="DevelopmentInProgress.ExampleModule.View.CustomerRemediationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:view="clr-namespace:DevelopmentInProgress.Origin.View;assembly=DevelopmentInProgress.Origin"
             xmlns:dipConverters="clr-namespace:DevelopmentInProgress.Origin.Converters;assembly=DevelopmentInProgress.Origin"
             xmlns:model="clr-namespace:DevelopmentInProgress.ExampleModule.Model"
             xmlns:rules="clr-namespace:DevelopmentInProgress.ExampleModule.Rules"
             xmlns:converters="clr-namespace:DevelopmentInProgress.ExampleModule.Converters"
             xmlns:progress="clr-namespace:DevelopmentInProgress.Origin.Controls.Progress;assembly=DevelopmentInProgress.Origin"
             mc:Ignorable="d">
    <view:DocumentViewBase.Resources>
        <ResourceDictionary>

            <dipConverters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
            <converters:StatusToVisibilityCollapsedConverter x:Key="StatusToVisibilityCollapsedConverter"/>
            <converters:StatusToVisibilityHiddenConverter x:Key="statusToVisibilityHiddenConverter"/>
            <converters:InvertedStatusToVisibilityCollapsedConverter x:Key="invertedStatusToVisibilityCollapsedConverter"/>
            <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <converters:EmptyStringToNullConverter x:Key="EmptyStringToNullConverter"/>
            <converters:AdjustmentApplicableVisibilityConverter x:Key="adjustmentApplicableVisibilityConverter"/>
            
            <Style TargetType="TextBox">               
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                    </Trigger>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="DatePickerTextBox">
                <Style.Triggers>
                    <Trigger Property="IsHitTestVisible" Value="False">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="ComboBox">
                <Style.Triggers>
                    <Trigger Property="IsHitTestVisible" Value="False">
                        <Setter Property="Background" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="GroupBoxNoHeaderStyle" TargetType="{x:Type GroupBox}">
                <Setter Property="BorderBrush" Value="#D5DFE5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupBox}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="6"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="6"/>
                                </Grid.RowDefinitions>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3"/>
                                <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                        <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                                    </Border>
                                </Border>
                                <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                                    <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate DataType="{x:Type model:LetterSent}">
                <StackPanel Orientation="Horizontal" Visibility="{Binding Status, Converter={StaticResource statusToVisibilityHiddenConverter}}">
                    <GroupBox Margin="5,0,0,5">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <Label Content="Letter Sent" FontWeight="Bold"/>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Width="150" Content="Letter Sent Date:" Margin="2"/>
                            <DatePicker Grid.Row="0" Grid.Column="1" Width="140" SelectedDate="{Binding LetterSentDate}" Margin="2" IsHitTestVisible="{Binding CanModify}" IsTabStop="{Binding CanModify}"/>
                            <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal">
                                <Button Width="80" HorizontalAlignment="Left" Margin="2" Content="Complete" 
                                    Command="{Binding DataContext.CompleteCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"                            
                                    CommandParameter="{Binding}"
                                    Visibility="{Binding CanComplete, Converter={StaticResource boolToVisibilityConverter}}"/>
                                <Viewbox Height="30" Width="30" 
                                         Visibility="{Binding InProgress, Converter={StaticResource boolToVisibilityConverter}}">
                                    <progress:CircularProgress/>
                                </Viewbox>
                            </StackPanel>
                        </Grid>
                    </GroupBox>
                    <Image Source="../Images/arrowRight.png" Visibility="{Binding Status, Converter={StaticResource invertedStatusToVisibilityCollapsedConverter}}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type model:ResponseReceived}">
                <StackPanel Orientation="Horizontal" Visibility="{Binding Status, Converter={StaticResource statusToVisibilityHiddenConverter}}">
                    <GroupBox Margin="5,0,0,5">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <Label Content="Response Received" FontWeight="Bold"/>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Width="150" Content="Response Recieved:" Margin="2"/>
                            <DatePicker Grid.Row="0" Grid.Column="1" Width="140" SelectedDate="{Binding ResponseReceivedDate}" Margin="2" IsHitTestVisible="{Binding CanModify}" IsTabStop="{Binding CanModify}"/>
                            <Label Grid.Row="1" Grid.Column="0" Width="150" Content="Consequential Loss Claim:" Margin="2"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Width="140" Margin="2" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadOnly}">
                                <TextBox.Text>
                                    <Binding Path="ConsequentialLossClaim"
                                             Converter="{StaticResource EmptyStringToNullConverter}"
                                             UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <rules:NumericValueRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal">
                                <Button Width="80" HorizontalAlignment="Left" Margin="2" Content="Complete" 
                                        Command="{Binding DataContext.CompleteCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"                          
                                        CommandParameter="{Binding}"
                                        Visibility="{Binding CanComplete, Converter={StaticResource boolToVisibilityConverter}}"/>
                                <Viewbox Height="30" Width="30" 
                                         Visibility="{Binding InProgress, Converter={StaticResource boolToVisibilityConverter}}">
                                    <progress:CircularProgress/>
                                </Viewbox>
                            </StackPanel>
                        </Grid>
                    </GroupBox>
                    <Image Source="../Images/arrowTurnRight.png" Visibility="{Binding Status, Converter={StaticResource invertedStatusToVisibilityCollapsedConverter}}"/>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type model:CollateData}">
                <StackPanel Orientation="Horizontal" Visibility="{Binding Status, Converter={StaticResource statusToVisibilityHiddenConverter}}">
                    <GroupBox Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}" Margin="5,0,0,5">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <Label Content="Collate Data" FontWeight="Bold"/>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Width="150" Content="Hedging Product:" Margin="2"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" Width="140" HorizontalAlignment="Left"
                                      ItemsSource="{Binding DataContext.Products, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                      SelectedItem="{Binding HedgingProduct}" Margin="2" IsHitTestVisible="{Binding CanModify}" IsTabStop="{Binding CanModify}"/>
                            <Label Grid.Row="1" Grid.Column="0" Width="150" Content="Nominal Amount:" Margin="2"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Width="140" Margin="2" IsReadOnly="{Binding IsReadOnly}" HorizontalAlignment="Left">
                                <TextBox.Text>
                                    <Binding Path="NominalAmount"
                                         Converter="{StaticResource EmptyStringToNullConverter}"
                                         UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <rules:NumericValueRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <Label Grid.Row="2" Grid.Column="0" Width="150" Content="Interest:" Margin="2"/>
                            <TextBox Grid.Row="2" Grid.Column="1" Width="100" Margin="2" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadOnly}">
                                <TextBox.Text>
                                    <Binding Path="Interest"
                                         Converter="{StaticResource EmptyStringToNullConverter}"
                                         UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <rules:NumericValueRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <Label Grid.Row="3" Grid.Column="0" Width="150" Content="Start Date:" Margin="2"/>
                            <DatePicker Grid.Row="3" Grid.Column="1" Width="140" SelectedDate="{Binding StartDate}" Margin="2" 
                                        HorizontalAlignment="Left" IsHitTestVisible="{Binding CanModify}" IsTabStop="{Binding CanModify}"/>
                            <Label Grid.Row="4" Grid.Column="0" Width="150" Content="Redress Rate:" Margin="2"/>
                            <TextBox Grid.Row="4" Grid.Column="1" Width="100" Margin="2" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadOnly}">
                                <TextBox.Text>
                                    <Binding Path="RedressRate"
                                         Converter="{StaticResource EmptyStringToNullConverter}"
                                         UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <rules:NumericValueRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <Label Grid.Row="5" Grid.Column="0" Width="150" Content="Redress Amount:" Margin="2"/>
                            <Label Grid.Row="5" Grid.Column="1" Width="140" Content="{Binding RedressAmount}" Margin="2"/>
                            <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal">
                                <Button Width="80" HorizontalAlignment="Left" Margin="2" Content="Complete" 
                                    Command="{Binding DataContext.CompleteCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"                            
                                    CommandParameter="{Binding}"
                                    Visibility="{Binding CanComplete, Converter={StaticResource boolToVisibilityConverter}}"/>
                                <Viewbox Height="30" Width="30" 
                                         Visibility="{Binding InProgress, Converter={StaticResource boolToVisibilityConverter}}">
                                    <progress:CircularProgress/>
                                </Viewbox>
                            </StackPanel>
                        </Grid>
                    </GroupBox>
                    <Image Source="../Images/arrowRight.png" Visibility="{Binding Status, Converter={StaticResource invertedStatusToVisibilityCollapsedConverter}}"/>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type model:Adjustment}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsArrowVisible, Converter={StaticResource adjustmentApplicableVisibilityConverter}}">
                        <GroupBox Style="{StaticResource GroupBoxNoHeaderStyle}" BorderBrush="Transparent" BorderThickness="0" Margin="5,20,0,5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="3" Grid.Column="0" Width="290" Text="No Adjustment Required" FontWeight="Bold" TextAlignment="Center" Margin="2"/>
                            </Grid>
                        </GroupBox>
                        <Image Source="../Images/arrowRight.png"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsAdjustmentApplicable, Converter={StaticResource adjustmentApplicableVisibilityConverter}}">
                        <GroupBox Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}" Margin="5,0,0,5">
                            <GroupBox.HeaderTemplate>
                                <DataTemplate>
                                    <Label Content="Adjustment Applicable" FontWeight="Bold"/>
                                </DataTemplate>
                            </GroupBox.HeaderTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="0" Width="150" Content="Adjustment Amount:" Margin="2"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Width="140" Margin="2" HorizontalAlignment="Left" IsReadOnly="{Binding IsReadOnly}">
                                    <TextBox.Text>
                                        <Binding Path="AdjustmentAmount"
                                                Converter="{StaticResource EmptyStringToNullConverter}"
                                                UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <rules:NumericValueRule/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal">
                                    <Button Width="80" HorizontalAlignment="Left" Margin="2" Content="Complete" 
                                    Command="{Binding DataContext.CompleteCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"                            
                                    CommandParameter="{Binding}"
                                    Visibility="{Binding CanComplete, Converter={StaticResource boolToVisibilityConverter}}"/>
                                    <Viewbox Height="30" Width="30" 
                                         Visibility="{Binding InProgress, Converter={StaticResource boolToVisibilityConverter}}">
                                        <progress:CircularProgress/>
                                    </Viewbox>
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                        <Image Source="../Images/arrowRight.png" Visibility="{Binding Status, Converter={StaticResource invertedStatusToVisibilityCollapsedConverter}}"/>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            
            <DataTemplate DataType="{x:Type model:RedressReview}">
                <StackPanel Orientation="Horizontal" Visibility="{Binding Status, Converter={StaticResource statusToVisibilityHiddenConverter}}">
                    <GroupBox Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}" Margin="5,0,0,5">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <Label Content="Redress Review" FontWeight="Bold"/>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Width="150" Content="Final Redress Amount:" Margin="2"/>
                            <Label Grid.Row="0" Grid.Column="1" Width="140" Content="{Binding FinalRedressAmount}" Margin="2"/>
                            <Button Grid.Row="6" Grid.Column="0" Width="80" Margin="2" Content="Fail"
                                    Command="{Binding DataContext.FailCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    CommandParameter="{Binding}"
                                    Visibility="{Binding Status, Converter={StaticResource StatusToVisibilityCollapsedConverter}}"/>
                            <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal">
                                <Button Width="80" HorizontalAlignment="Left" Margin="2" Content="Complete" 
                                    Command="{Binding DataContext.CompleteCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"                            
                                    CommandParameter="{Binding}"
                                    Visibility="{Binding CanComplete, Converter={StaticResource boolToVisibilityConverter}}"/>
                                <Viewbox Height="30" Width="30" 
                                         Visibility="{Binding InProgress, Converter={StaticResource boolToVisibilityConverter}}">
                                    <progress:CircularProgress/>
                                </Viewbox>
                            </StackPanel>
                        </Grid>
                    </GroupBox>
                    <Image Source="../Images/arrowRight.png" Visibility="{Binding Status, Converter={StaticResource invertedStatusToVisibilityCollapsedConverter}}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type model:Payment}">
                <GroupBox Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}" Margin="5,0,0,5" Visibility="{Binding Status, Converter={StaticResource statusToVisibilityHiddenConverter}}">
                    <GroupBox.HeaderTemplate>
                        <DataTemplate>
                            <Label Content="Payment" FontWeight="Bold"/>
                        </DataTemplate>
                    </GroupBox.HeaderTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="0" Width="150" Content="Payment Date:" Margin="2"/>
                        <DatePicker Grid.Row="0" Grid.Column="1" Width="140" SelectedDate="{Binding PaymentDate}" Margin="2"
                                    HorizontalAlignment="Left" IsHitTestVisible="{Binding CanModify}" IsTabStop="{Binding CanModify}"/>
                        <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal">
                            <Button Width="80" HorizontalAlignment="Left" Margin="2" Content="Execute" 
                                    Command="{Binding DataContext.CompleteCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"                            
                                    CommandParameter="{Binding}"
                                    Visibility="{Binding CanComplete, Converter={StaticResource boolToVisibilityConverter}}"/>
                            <Viewbox Height="30" Width="30" 
                                         Visibility="{Binding InProgress, Converter={StaticResource boolToVisibilityConverter}}">
                                <progress:CircularProgress/>
                            </Viewbox>
                        </StackPanel>
                    </Grid>
                </GroupBox>                
            </DataTemplate>

        </ResourceDictionary>
    </view:DocumentViewBase.Resources>

    <DockPanel Margin="10,10,10,10" LastChildFill="True">
        
        <GroupBox DockPanel.Dock="Bottom" Style="{StaticResource GroupBoxNoHeaderStyle}"
                  Background="{DynamicResource {x:Static SystemColors.GradientActiveCaptionBrushKey}}"
                  DataContext="{Binding ElementName=CustomerList, Path=SelectedItem}"
                  Visibility="{Binding ElementName=CustomerList, Path=SelectedItem, Converter={StaticResource NullToVisibilityConverter}}">
            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Content="Name:" FontWeight="Bold"/>
                    <Label Content="{Binding Name}" Width="300"/>
                    <Label Content="Sort Code:" FontWeight="Bold"/>
                    <Label Content="{Binding SortCode}" Width="100"/>
                    <Label Content="Account Number:" FontWeight="Bold"/>
                    <Label Content="{Binding AccountNumber}" Width="150"/>
                    <ContentControl/>
                </StackPanel>
                <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <StackPanel>
                        <ItemsControl ItemsSource="{Binding CommunicationWorkflow}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                        <ItemsControl ItemsSource="{Binding RedressWorkflow}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>
            </StackPanel>
        </GroupBox>
        
        <ScrollViewer DockPanel.Dock="Top" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <ListView x:Name="CustomerList" ItemsSource="{Binding Customers}" SelectedItem="{Binding CurrentCustomer, Mode=TwoWay}">
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type model:Customer}">
                        <GroupBox Style="{StaticResource GroupBoxNoHeaderStyle}" 
                            Background="{DynamicResource {x:Static SystemColors.GradientInactiveCaptionBrushKey}}" 
                            BorderBrush="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <StackPanel Grid.Row="0" Orientation="Horizontal">
                                    <Label Content="Name:" FontWeight="Bold"/>
                                    <Label Content="{Binding Name}" Width="300"/>
                                    <Label Content="Sort Code:" FontWeight="Bold"/>
                                    <Label Content="{Binding SortCode}" Width="100"/>
                                    <Label Content="Account Number:" FontWeight="Bold"/>
                                    <Label Content="{Binding AccountNumber}" Width="150"/>
                                    <Label Content="Address:" FontWeight="Bold"/>
                                    <Label Content="{Binding Address}"/>
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </ScrollViewer>
        
    </DockPanel>
</view:DocumentViewBase>
